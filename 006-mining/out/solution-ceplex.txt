*************************************************************

   NEOS Server Version 6.0
   Job#     : 16178993
   Password : kVlQdBzW
   User     : 
   Solver   : lp:CPLEX:AMPL
   Start    : 2025-06-08 07:11:42
   End      : 2025-06-08 07:12:02
   Host     : prod-sub-1.neos-server.org

   Disclaimer:

   This information is provided without any express or
   implied warranty. In particular, there is no warranty
   of any kind concerning the fitness of this
   information for any particular purpose.

   Announcements:
*************************************************************
You are using the solver cplexamp.
Checking ampl.mod for cplex_options...
Checking ampl.com for cplex_options...
Executing AMPL.
processing data.
processing commands.
Executing on prod-exec-6.neos-server.org

"option presolve 10;" used, but "option presolve 3;" would suffice.
60 variables:
	40 binary variables
	20 linear variables
66 constraints, all linear; 151 nonzeros
	5 equality constraints
	61 inequality constraints
1 linear objective; 40 nonzeros.

CPLEX 22.1.2:   tech:threads = 4
  tech:outlev = 1
 - Version identifier: 22.1.2.0 | 2024-11-26 | 0edbb82fd
 - CPXPARAM_Threads                                 4
 - CPXPARAM_MIP_Display                             3
 - Found incumbent of value 0.000000 after 0.00 sec. (0.00 ticks)
 - Tried aggregator 2 times.
 - MIP Presolve eliminated 1 rows and 1 columns.
 - MIP Presolve modified 8 coefficients.
 - Aggregator did 7 substitutions.
 - Reduced MIP has 58 rows, 52 columns, and 135 nonzeros.
 - Reduced MIP has 36 binaries, 0 generals, 0 SOSs, and 0 indicators.
 - Presolve time = 0.00 sec. (0.13 ticks)
 - Probing time = 0.00 sec. (0.04 ticks)
 - Tried aggregator 1 time.
 - Detecting symmetries...
 - Reduced MIP has 58 rows, 52 columns, and 135 nonzeros.
 - Reduced MIP has 36 binaries, 0 generals, 0 SOSs, and 0 indicators.
 - Presolve time = 0.00 sec. (0.10 ticks)
 - Probing time = 0.00 sec. (0.04 ticks)
 - Clique table members: 80.
 - MIP emphasis: balance optimality and feasibility.
 - MIP search method: dynamic search.
 - Parallel mode: deterministic, using up to 4 threads.
 - Root relaxation solution time = 0.00 sec. (0.14 ticks)
 - 
        Nodes                                         Cuts/
 -    Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

 - *     0+    0                            0.0000      331.2386              --- 
 - Found incumbent of value 0.000000 after 0.00 sec. (0.53 ticks)
 - *     0+    0                          119.4180      331.2386           177.38%
 - Found incumbent of value 119.417985 after 0.00 sec. (0.53 ticks)
 -       0     0      143.3916     5      119.4180      143.3916       33   20.08%
 -       0     0      135.0626     3      119.4180       Cuts: 9       46   13.10%
 - *     0+    0                          133.5107      135.0626             1.16%
 - Found incumbent of value 133.510749 after 0.01 sec. (0.94 ticks)
 - *     0+    0                          133.5107                            --- 
 - Found incumbent of value 133.510749 after 0.01 sec. (1.88 ticks)
 -       0     0        cutoff            133.5107                     46     --- 
 - Elapsed time = 0.01 sec. (1.88 ticks, tree = 0.01 MB, solutions = 3)
 - 
 - Flow cuts applied:  4
 - Mixed integer rounding cuts applied:  1
 - Gomory fractional cuts applied:  1
 - 
Root node processing (before b&c):
 -   Real time             =    0.01 sec. (1.88 ticks)
 - Parallel b&c, 4 threads:
 -   Real time             =    0.00 sec. (0.00 ticks)
 -   Sync time (average)   =    0.00 sec.
 -   Wait time (average)   =    0.00 sec.
 -                           ------------
 - Total (root+branch&cut) =    0.01 sec. (1.88 ticks)
CPLEX 22.1.2: optimal solution; objective 133.5107492
46 simplex iterations
NPV = 133.511

x[m,j] :=
1 Mine1   2
1 Mine2   0
1 Mine3   1.3
1 Mine4   2.45
2 Mine1   0
2 Mine2   2.5
2 Mine3   1.3
2 Mine4   2.2
3 Mine1   1.95
3 Mine2   0
3 Mine3   1.3
3 Mine4   0
4 Mine1   0.125
4 Mine2   2.5
4 Mine3   0
4 Mine4   3
5 Mine1   2
5 Mine2   2.16667
5 Mine3   1.3
5 Mine4   0
;

y[m,j] :=
1 Mine1   1
1 Mine2   0
1 Mine3   1
1 Mine4   1
2 Mine1   0
2 Mine2   1
2 Mine3   1
2 Mine4   1
3 Mine1   1
3 Mine2   0
3 Mine3   1
3 Mine4   0
4 Mine1   1
4 Mine2   1
4 Mine3   0
4 Mine4   1
5 Mine1   1
5 Mine2   1
5 Mine3   1
5 Mine4   0
;

z[m,j] :=
1 Mine1   1
1 Mine2   1
1 Mine3   1
1 Mine4   1
2 Mine1   1
2 Mine2   1
2 Mine3   1
2 Mine4   1
3 Mine1   1
3 Mine2   1
3 Mine3   1
3 Mine4   1
4 Mine1   1
4 Mine2   1
4 Mine3   1
4 Mine4   1
5 Mine1   1
5 Mine2   1
5 Mine3   1
5 Mine4   0
;

NEOS Server Home
